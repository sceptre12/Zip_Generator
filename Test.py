# Testing out this scipy library

import numpy as np
from scipy.spatial import Delaunay
import matplotlib.pyplot as plt
from utility.util import is_point_wrapper

points = np.array([[-77.054871,38.897347],[-77.054835,38.897348],[-77.054793,38.897352],[-77.054762,38.897351],[-77.054639,38.897359],[-77.054457,38.897355],[-77.054359,38.897355],[-77.054275,38.897356],[-77.054136,38.897356],[-77.054094,38.897357],[-77.054039,38.897356],[-77.053823,38.897356],[-77.053723,38.897353],[-77.053623,38.897356],[-77.053576,38.897361],[-77.053524,38.897374],[-77.053462,38.897406],[-77.053434,38.897428],[-77.05341,38.897455],[-77.053383,38.897512],[-77.053371,38.897554],[-77.053364,38.897574],[-77.053345,38.897638],[-77.05334,38.897659],[-77.053331,38.897688],[-77.053324,38.897723],[-77.053319,38.897753],[-77.053318,38.89778],[-77.053312,38.897861],[-77.053315,38.89792],[-77.053325,38.897997],[-77.053329,38.898041],[-77.053028,38.897958],[-77.053024,38.897907],[-77.053026,38.897865],[-77.053041,38.897774],[-77.053049,38.897717],[-77.053057,38.897672],[-77.053062,38.897637],[-77.05308,38.89757],[-77.053094,38.897531],[-77.053111,38.897488],[-77.053194,38.897317],[-77.053212,38.897284],[-77.053238,38.897243],[-77.053281,38.897187],[-77.053316,38.897135],[-77.053351,38.897089],[-77.053375,38.897059],[-77.053402,38.897029],[-77.05345,38.896969],[-77.053474,38.896937],[-77.0535,38.896909],[-77.053572,38.896826],[-77.053599,38.896797],[-77.053617,38.896776],[-77.05364,38.896752],[-77.053684,38.896701],[-77.053707,38.896672],[-77.053735,38.89664],[-77.053959,38.896361],[-77.053988,38.896329],[-77.054011,38.896302],[-77.054042,38.896263],[-77.054061,38.896194],[-77.0541,38.896083],[-77.054117,38.896039],[-77.054123,38.895986],[-77.054125,38.89594],[-77.054112,38.895863],[-77.054099,38.895827],[-77.054067,38.895766],[-77.054007,38.895689],[-77.053936,38.895626],[-77.053846,38.895572],[-77.053762,38.895535],[-77.053701,38.895518],[-77.053739,38.89543],[-77.053745,38.895387],[-77.05374,38.895326],[-77.053739,38.895267],[-77.053741,38.895248],[-77.053743,38.895172],[-77.053743,38.895127],[-77.05374,38.895029],[-77.053737,38.894992],[-77.053729,38.894931],[-77.053721,38.894885],[-77.053698,38.894794],[-77.053687,38.894763],[-77.053622,38.894632],[-77.053582,38.894562],[-77.053542,38.8945],[-77.053513,38.894461],[-77.053481,38.894416],[-77.053445,38.89437],[-77.053379,38.894277],[-77.053309,38.894198],[-77.053246,38.89414],[-77.05322,38.894081],[-77.053249,38.894085],[-77.053387,38.894083],[-77.053489,38.894077],[-77.053547,38.894077],[-77.05364,38.894067],[-77.05379,38.894041],[-77.053875,38.89402],[-77.053919,38.894008],[-77.053953,38.893999],[-77.054027,38.893974],[-77.054112,38.893934],[-77.054135,38.893922],[-77.054179,38.893901],[-77.054214,38.893881],[-77.054337,38.893799],[-77.054362,38.893781],[-77.054395,38.893759],[-77.054463,38.893717],[-77.054501,38.893691],[-77.054541,38.893661],[-77.054757,38.893505],[-77.055124,38.893264],[-77.055271,38.893207],[-77.055419,38.893154],[-77.055569,38.893094],[-77.055645,38.89322],[-77.055773,38.893426],[-77.055952,38.893719],[-77.056016,38.893822],[-77.056077,38.893918],[-77.056199,38.89412],[-77.056223,38.894161],[-77.056258,38.894216],[-77.056268,38.894233],[-77.056318,38.894333],[-77.056359,38.894428],[-77.056376,38.894471],[-77.056388,38.89451],[-77.056397,38.894532],[-77.056425,38.894639],[-77.056443,38.894729],[-77.056451,38.894783],[-77.056459,38.894853],[-77.056461,38.894878],[-77.056463,38.894959],[-77.056462,38.895501],[-77.05646,38.895831],[-77.05646,38.896051],[-77.056457,38.896607],[-77.056458,38.896712],[-77.056456,38.89704],[-77.056445,38.897244],[-77.056434,38.897377],[-77.056423,38.897457],[-77.056397,38.8977],[-77.056383,38.897807],[-77.05637,38.897917],[-77.056359,38.898026],[-77.05635,38.898135],[-77.056347,38.898216],[-77.056293,38.8981],[-77.056281,38.89808],[-77.05627,38.898055],[-77.056253,38.898024],[-77.056233,38.897991],[-77.056216,38.897958],[-77.0562,38.897922],[-77.056109,38.897756],[-77.056069,38.897678],[-77.056046,38.897641],[-77.056013,38.897608],[-77.055992,38.897598],[-77.055971,38.897582],[-77.055948,38.897562],[-77.055929,38.897541],[-77.055876,38.897493],[-77.055849,38.897472],[-77.055753,38.897414],[-77.055691,38.897399],[-77.055562,38.897391],[-77.055477,38.897381],[-77.055393,38.897355],[-77.055344,38.897354],[-77.055293,38.897354],[-77.055263,38.897353],[-77.05523,38.897353],[-77.0552,38.897352],[-77.055144,38.897348],[-77.055104,38.897349],[-77.055044,38.897349],[-77.055007,38.897348],
                   [-77.054977,38.897346],[-77.054871,38.897347]])


tri = Delaunay(points)

# plt.triplot(points[:,0], points[:,1], tri.simplices)
# plt.plot(points[:,0], points[:,1])
# plt.show()

# print(tri.simplices)
# print(tri.neighbors[3])

print(tri.simplices[3])

a1 = points[tri.simplices[4][0]]
a2 = points[tri.simplices[4][1]]
a3 = points[tri.simplices[4][2]]

print(a1)
print(a2)
print(a3)

a4 = [-77.055569, 38.893294]

import itertools
combined = list(map(lambda x: abs(x),list(itertools.chain(a1,a2,a3,a4))))

print(combined)

print(is_point_wrapper(combined))

# Should be inside triangle

# {
#     "type": "Polygon",
#     "coordinates": [
#         [
#            [-77.055271,  38.893207],
# [-77.055773,  38.893426],
# [-77.055569,  38.893094],
# [-77.055271,  38.893207]
#
#         ]
#     ]
# }


